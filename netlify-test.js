// –≠—Ç–æ—Ç —Ñ–∞–π–ª –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Next.js —Å Netlify
// –ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–æ–≥–∞—Ö Netlify, –∑–Ω–∞—á–∏—Ç —Ñ–∞–π–ª –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω

console.log('Netlify test script loaded successfully');
console.log('Next.js version:', require('next/package.json').version);
console.log('Node.js version:', process.version);
console.log('Environment:', process.env.NODE_ENV);

// –ü—Ä–æ–≤–µ—Ä–∏–º, –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –ª–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
try {
  const fs = require('fs');
  const path = require('path');
  console.log('Checking important files:');
  
  // –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –ø—É—Ç–∏ —Ñ–∞–π–ª–æ–≤ –¥–ª—è Next.js 15
  const files = [
    '.next/server/pages/index.html',
    '.next/server/app/page.js',
    '.next/server/pages-manifest.json',
    '.next/build-manifest.json',
    '.next/trace'
  ];
  
  // –ü—Ä–æ–≤–µ—Ä–∏–º —Ç–∞–∫–∂–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∞–∂–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
  console.log('Checking key directories:');
  ['.next/server', '.next/static', '.next/standalone'].forEach(dir => {
    if (fs.existsSync(dir)) {
      console.log(`üìÅ ${dir} exists, contents:`);
      try {
        const items = fs.readdirSync(dir);
        items.forEach(item => console.log(`   - ${item}`));
      } catch (e) {
        console.log(`   Error reading directory: ${e.message}`);
      }
    } else {
      console.log(`‚ùå ${dir} does not exist`);
    }
  });
  
  // –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–∞–ª–∏—á–∏–µ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
  files.forEach(file => {
    if (fs.existsSync(file)) {
      console.log(`‚úÖ ${file} exists`);
    } else {
      console.log(`‚ùå ${file} does not exist`);
    }
  });
  
  // –î–æ–±–∞–≤–∏–º –ø—Ä–æ–≤–µ—Ä–∫—É –≤–∞–∂–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ manifest –¥–ª—è Next.js –Ω–∞ Netlify
  if (fs.existsSync('.next/required-server-files.json')) {
    console.log('‚úÖ .next/required-server-files.json exists');
  } else {
    console.log('‚ùå .next/required-server-files.json does not exist - CRITICAL for Netlify deployment');
  }
  
} catch (error) {
  console.error('Error checking files:', error);
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ Netlify Functions
exports.handler = async function(event, context) {
  return {
    statusCode: 200,
    body: JSON.stringify({
      message: 'Netlify test function is working!',
      nextVersion: require('next/package.json').version,
      nodeVersion: process.version
    })
  };
}; 